# CLIENT DEPLOYMENT ENVIRONMENT VARIABLES TEMPLATE
# Copy these variables and replace with your own values when deploying

# Server Configuration
HOST=0.0.0.0
PORT=1337
NODE_ENV=production

# Security Keys (GENERATE NEW ONES FOR PRODUCTION!)
# Use: node -e "console.log(require('crypto').randomBytes(32).toString('base64'))" to generate
APP_KEYS=GENERATE_NEW_APP_KEYS_HERE
API_TOKEN_SALT=GENERATE_NEW_API_TOKEN_SALT_HERE
ADMIN_JWT_SECRET=GENERATE_NEW_ADMIN_JWT_SECRET_HERE
TRANSFER_TOKEN_SALT=GENERATE_NEW_TRANSFER_TOKEN_SALT_HERE
ENCRYPTION_KEY=GENERATE_NEW_ENCRYPTION_KEY_HERE

# Database Configuration (Replace with your Cloud SQL instance)
DATABASE_CLIENT=postgres
DATABASE_HOST=/cloudsql/YOUR_PROJECT_ID:YOUR_REGION:YOUR_DB_INSTANCE_NAME
DATABASE_PORT=5432
DATABASE_NAME=YOUR_DATABASE_NAME
DATABASE_USERNAME=YOUR_DB_USERNAME
DATABASE_PASSWORD=YOUR_DB_PASSWORD
DATABASE_SSL=false
DATABASE_SCHEMA=public

# Google Cloud Storage Configuration (Replace with your bucket)
BUCKET_NAME=YOUR_GCS_BUCKET_NAME
GCS_PUBLIC_FILES=true
GCS_UNIFORM=false
GCS_BASE_PATH=
GCS_BASE_URL=

# Google Cloud Storage Authentication
# Option 1: Service Account JSON (recommended for production)
# GCP_SERVICE_ACCOUNT={"type":"service_account","project_id":"your-project",...}

# Option 2: Service Account Key File Path (alternative)
# GCP_KEY_FILE=/path/to/service-account-key.json

# Optional: CDN URL if using Cloud CDN
# CDN_URL=https://your-cdn-domain.com
